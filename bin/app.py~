#!/bin/python2
# -*- coding: utf-8 -*-

# run the script with python bin/app.py
# launch the browser with http://0.0.0.0:8080/
# export PYTHONPATH=$PYTHONPATH:. in Linux
# $env:PYTHONPATH = "$env:PYTHONPATH;." in PowerShell
# Documentation:
# http://webpy.org/cookbook/session_with_reloader
# http://webpy.org/cookbook/sessions

import sys
sys.path.append('.') # '/var/www/'

import web
from gothonmap import map
##web.config.debug = True

urls = (
    '/', 'Index',
    '/game', 'GameEngine'   
)

app = web.application(urls, globals())

if web.config.get('_session') is None:
    store = web.session.DiskStore('sessions')
    session = web.session.Session(app, store, 
                                  initializer={'room': None})
    web.config._session = session
else:
    session = web.config._session

render = web.template.render('templates/', base="layout") # /templates/layout_plus.html

class Index(object):
    def GET(self): # this is used to "setup" the session with starting values
        session.room = map.START
        web.seeother("/game")

class GameEngine(object):
    def GET(self):
        if session.room:
            return render.show_room(room=session.room) # /templates/show_room_plus.html

    def POST(self):
        form = web.input(action=None)
        if (session.room.name == "Laser Weapon Armory") and (session.room.paths.has_key(form.action) == False):
            form.action = '*'
        if session.room and form.action: # if all true, execute the next line; otherwise, jump over it
            if session.room.paths.has_key(form.action): # if the entry is what is expected in the dictionary (excluding errors, mispelling, no entry at all), it executes the next line; otherwise, it jumps over it
                session.room = session.room.go(form.action)
        web.seeother("/game")

if __name__ == "__main__":
    app.run()
